name: Build and push multi-arch docker image

on:
  workflow_dispatch: 
  schedule:
    - cron: '0 1 * * *'

env:
  DOCKERHUB_REPO: hdbjlizhe/autman

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Get GitHub Release Tag
        id: get_tag
        run: |
          API_RESPONSE=$(curl -s "https://api.github.com/repos/hdbjlizhe/fanli/releases/latest")
          browser_download_url=$(echo "$API_RESPONSE" | jq -r '.assets[] | select(.name == "autMan_${{ matrix.architecture }}.tar.gz").browser_download_url')
          TAG_NAME=$(echo "$API_RESPONSE" | jq -r '.tag_name')
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "browser_download_url=$browser_download_url" >> $GITHUB_ENV
          
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/my-repo:latest-amd64
            ${{ secrets.DOCKERHUB_USERNAME }}/my-repo:latest-arm64

      - name: Create manifest for multi-arch image
        run: |
          docker manifest create ${{ secrets.DOCKERHUB_USERNAME }}/my-repo:latest \
            ${{ secrets.DOCKERHUB_USERNAME }}/my-repo:latest-amd64 \
            ${{ secrets.DOCKERHUB_USERNAME }}/my-repo:latest-arm64

      - name: Push manifest for multi-arch image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-repo:latest
